error[E0597]: `ring` does not live long enough
  --> tests/compile-fail/buffer_outlives_operation.rs:11:23
   |
6  |     let ring = Ring::new(10).unwrap();
   |         ---- binding `ring` declared here
...
11 |         let _future = ring.read(0, buffer.as_mut_slice());
   |                       ^^^^ borrowed value does not live long enough
12 |     } // buffer dropped while operation is pending
13 | }
   | -
   | |
   | `ring` dropped here while still borrowed
   | borrow might be used here, when `ring` is dropped and runs the `Drop` code for type `Ring`

error[E0596]: cannot borrow `buffer` as mutable, as it is not declared as mutable
  --> tests/compile-fail/buffer_outlives_operation.rs:11:36
   |
11 |         let _future = ring.read(0, buffer.as_mut_slice());
   |                                    ^^^^^^ cannot borrow as mutable
   |
help: consider changing this to be mutable
   |
9  |         let mut buffer = PinnedBuffer::with_capacity(1024);
   |             +++
