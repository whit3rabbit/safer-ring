name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, beta]
        exclude:
          # Reduce CI load by only testing stable on macOS/Windows
          - os: macos-latest
            rust: beta
          - os: windows-latest
            rust: beta

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Run library tests
      run: cargo test --lib --verbose

    - name: Run compile-fail tests (critical safety tests)
      run: cargo test compile_fail_tests --verbose

    - name: Run integration tests
      run: cargo test --test batch_operations --verbose

    - name: Test examples compile
      run: cargo build --examples --verbose

  linux-specific:
    name: Linux io_uring Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ubuntu-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run all tests with io_uring features
      run: cargo test --verbose --features unstable

    - name: Run stress tests
      run: cargo test --test stress_tests --verbose

    - name: Run network operation tests
      run: cargo test --test network_operations --verbose

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: docs-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build documentation
      run: cargo doc --all-features --no-deps

    - name: Check for broken links in docs
      run: cargo doc --all-features --no-deps 2>&1 | grep -i "warning\|error" && exit 1 || exit 0

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

  publish-check:
    name: Publish Check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: publish-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Dry run publish
      run: cargo publish --dry-run